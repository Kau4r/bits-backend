generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  User_ID     Int      @id @default(autoincrement())
  User_Role   UserRole @default(STUDENT)
  First_Name  String
  Middle_Name String
  Last_Name   String
  Email       String   @unique
  Password    String
  Created_At  DateTime @default(now())
  Updated_At  DateTime @updatedAt
  Is_Active   Boolean  @default(true)

  // Relations
  Audit_Log          Audit_Log[]
  Borrowed_Items     Borrow_Item[]    @relation("BorrowerRelation")
  Lent_Items         Borrow_Item[]    @relation("BorroweeRelation")
  Borrowing_Comp     Borrowing_Comp[]
  Forms_Approved     Form[]           @relation("Form_Approver_IDToUser")
  Forms_Created      Form[]           @relation("Form_Creator_IDToUser")
  Items              Item[]
  CreatedTickets     Ticket[]         @relation("Ticket_User")
  AssignedTickets    Ticket[]         @relation("TicketTechnician")
  Opened_Rooms       Room[]           @relation("RoomOpenedBy")
  Booked_Room        Booked_Room[]
  Created_Schedules  Schedule[]       @relation("ScheduleCreatedBy")
  Approved_Schedules Booked_Room[]    @relation("ScheduleApprover")
}

model Item {
  Item_ID   Int    @id @default(autoincrement())
  Item_Code String @unique
  Item_Type String @default("GENERAL")

  Brand         String?
  Serial_Number String?
  Status        ItemStatus
  Created_At    DateTime   @default(now())
  Updated_At    DateTime   @updatedAt

  // Relations
  Borrow_Item Borrow_Item[]
  Computers   Computer[]    @relation("ComputerItems")

  ReplacedById Int?  @unique
  ReplacedBy   Item? @relation("ItemReplacement", fields: [ReplacedById], references: [Item_ID])
  Replaces     Item? @relation("ItemReplacement")

  Room_ID Int?
  Room    Room? @relation(fields: [Room_ID], references: [Room_ID])
  User_ID Int?
  User    User? @relation(fields: [User_ID], references: [User_ID])

  Tickets      Ticket[]
  IsBorrowable Boolean

  @@index([Item_Code])
  @@index([Status])
  @@index([Room_ID])
}

enum TicketStatus {
  PENDING
  IN_PROGRESS
  RESOLVED
}

enum TicketPriority {
  HIGH
  MEDIUM
  LOW
}

enum TicketCategory {
  HARDWARE
  SOFTWARE
  FACILITY
  OTHER
}

model Ticket {
  Ticket_ID Int @id @default(autoincrement())

  Reported_By_ID Int
  Reported_By    User  @relation("Ticket_User", fields: [Reported_By_ID], references: [User_ID])
  Item_ID        Int?
  Item           Item? @relation(fields: [Item_ID], references: [Item_ID])

  Report_Problem String

  Room_ID  Int?
  Room     Room?   @relation(fields: [Room_ID], references: [Room_ID])
  Location String?

  Status        TicketStatus    @default(PENDING)
  Technician_ID Int?
  Technician    User?           @relation("TicketTechnician", fields: [Technician_ID], references: [User_ID])
  Priority      TicketPriority?
  Category      TicketCategory?

  AuditLogs Audit_Log[] @relation("TicketAuditLogs")

  Created_At DateTime @default(now())
  Updated_At DateTime @updatedAt
  Archived   Boolean  @default(false)
}

model Form {
  Form_ID     Int      @id @default(autoincrement())
  Creator_ID  Int
  Approver_ID Int?
  Title       String
  Content     String
  Status      String
  Created_At  DateTime @default(now())
  Updated_At  DateTime @updatedAt

  User_Form_Approver_IDToUser User? @relation("Form_Approver_IDToUser", fields: [Approver_ID], references: [User_ID])
  User_Form_Creator_IDToUser  User  @relation("Form_Creator_IDToUser", fields: [Creator_ID], references: [User_ID])
}

enum RoomStatus {
  AVAILABLE
  IN_USE
  MAINTENANCE
  RESERVED
  CLOSED
}

enum ScheduleType {
  CLASS
  FACULTY_USE
  STUDENT_USE
  MAINTENANCE
  SPECIAL_EVENT
}

enum RoomType {
  CONSULTATION
  LECTURE
  LAB
}

model Room {
  Room_ID          Int           @id @default(autoincrement())
  Name             String
  Room_Type        RoomType      @default(LAB)
  Capacity         Int
  Status           RoomStatus    @default(AVAILABLE)
  Current_Use_Type ScheduleType?
  Opened_By        Int?
  Opened_At        DateTime?
  Closed_At        DateTime?
  Created_At       DateTime      @default(now())
  Updated_At       DateTime      @updatedAt

  Booked_Rooms Booked_Room[]
  Items        Item[]
  Schedule     Schedule[]
  Computers    Computer[]
  Tickets      Ticket[]

  Borrow_Items Borrow_Item[] // all borrow items linked to this room

  Opened_By_User User? @relation("RoomOpenedBy", fields: [Opened_By], references: [User_ID])
}

model Schedule {
  Schedule_ID   Int          @id @default(autoincrement())
  Room_ID       Int
  Schedule_Type ScheduleType
  Title         String
  Start_Time    DateTime
  End_Time      DateTime
  Days          String       @default("1,2,3,4,5")
  IsActive      Boolean      @default(true)
  IsRecurring   Boolean      @default(true)
  Created_By    Int
  Created_At    DateTime     @default(now())
  Updated_At    DateTime     @updatedAt

  Room            Room          @relation(fields: [Room_ID], references: [Room_ID])
  Created_By_User User          @relation("ScheduleCreatedBy", fields: [Created_By], references: [User_ID])
  Booked_Rooms    Booked_Room[]

  @@map("Schedule")
}

model Booked_Room {
  Booked_Room_ID Int      @id @default(autoincrement())
  Room_ID        Int
  User_ID        Int
  Start_Time     DateTime
  End_Time       DateTime
  Status         String   @default("PENDING")
  Created_At     DateTime @default(now())
  Updated_At     DateTime @updatedAt
  Approved_By    Int?
  Notes          String?
  Purpose        String?
  Schedule_ID    Int?

  Room      Room        @relation(fields: [Room_ID], references: [Room_ID])
  Schedule  Schedule?   @relation(fields: [Schedule_ID], references: [Schedule_ID])
  User      User        @relation(fields: [User_ID], references: [User_ID])
  Approver  User?       @relation("ScheduleApprover", fields: [Approved_By], references: [User_ID])
  Audit_Log Audit_Log[]

  @@map("Booked_Room")
}

enum LogType {
  TICKET
  SCHEDULE
  BORROWING
  SYSTEM
}

model Audit_Log {
  Log_ID   Int     @id @default(autoincrement())
  Log_Type LogType @default(SYSTEM)
  Action   String

  User_ID Int?
  User    User? @relation(fields: [User_ID], references: [User_ID])

  Ticket_ID Int?
  Ticket    Ticket? @relation("TicketAuditLogs", fields: [Ticket_ID], references: [Ticket_ID])

  Booked_Room_ID Int?
  Booked_Room    Booked_Room? @relation(fields: [Booked_Room_ID], references: [Booked_Room_ID])

  Borrowing_ID Int?
  Borrowing    Borrow_Item? @relation("BorrowingAuditLogs", fields: [Borrowing_ID], references: [Borrow_Item_ID])

  Details   Json?
  Timestamp DateTime @default(now())

  Is_Notification      Boolean   @default(false)
  Notification_Read_At DateTime?

  @@index([Log_Type])
  @@index([User_ID])
  @@index([Ticket_ID])
  @@index([Booked_Room_ID])
  @@index([Borrowing_ID])
}

enum BorrowStatus {
  PENDING
  APPROVED
  REJECTED
  BORROWED
  RETURNED
  OVERDUE
}

model Borrow_Item {
  Borrow_Item_ID Int @id @default(autoincrement())

  Borrower_ID Int
  Borrowee_ID Int
  Item_ID     Int
  Room_ID     Int? // optional relation to Room

  Borrow_Date DateTime     @default(now())
  Return_Date DateTime?
  Status      BorrowStatus @default(PENDING)
  Created_At  DateTime     @default(now())

  Borrower User  @relation("BorrowerRelation", fields: [Borrower_ID], references: [User_ID])
  Borrowee User  @relation("BorroweeRelation", fields: [Borrowee_ID], references: [User_ID])
  Item     Item  @relation(fields: [Item_ID], references: [Item_ID])
  Room     Room? @relation(fields: [Room_ID], references: [Room_ID])

  AuditLogs Audit_Log[] @relation("BorrowingAuditLogs")
}

model Borrowing_Comp {
  Borrowing_Comp_ID Int      @id @default(autoincrement())
  User_ID           Int
  Computer_ID       Int
  Updated_At        DateTime @updatedAt
  Return_Date       DateTime
  Status            String
  Created_At        DateTime @default(now())
  Computer          Computer @relation(fields: [Computer_ID], references: [Computer_ID])
  User              User     @relation(fields: [User_ID], references: [User_ID])
}

model Computer {
  Computer_ID    Int              @id @default(autoincrement())
  Name           String
  Created_At     DateTime         @default(now())
  Updated_At     DateTime         @updatedAt
  Status         ComputerStatus   @default(AVAILABLE)
  Room_ID        Int?
  Room           Room?            @relation(fields: [Room_ID], references: [Room_ID])
  Borrowing_Comp Borrowing_Comp[]
  Items          Item[]           @relation("ComputerItems")
}

enum UserRole {
  LAB_HEAD
  LAB_TECH
  FACULTY
  STUDENT
  SECRETARY
  ADMIN
}

enum ItemStatus {
  AVAILABLE
  BORROWED
  DEFECTIVE
  LOST
  REPLACED
}

enum ComputerStatus {
  AVAILABLE
  IN_USE
  MAINTENANCE
  DECOMMISSIONED
}
